<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>[B]Live TV[/B]</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/livetv.png</thumb>
			<property name="labelID">script.tvguidemegatvbox</property>
			<property name="defaultID">script.tvguidemegatvbox</property>
			<property name="translatedPath">RunAddOn(script.tvguidemegatvbox)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.tvguidemegatvbox)</onclick>
			<property name="path">RunAddOn(script.tvguidemegatvbox)</property>
			<property name="list">RunAddOn(script.tvguidemegatvbox)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-tvguidemegatvbox</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>[B]Movies on Demand[/B]</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/movies.png</thumb>
			<property name="labelID">script.moviesmegatvbox</property>
			<property name="defaultID">script.moviesmegatvbox</property>
			<property name="translatedPath">RunAddOn(script.moviesmegatvbox)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.moviesmegatvbox)</onclick>
			<property name="path">RunAddOn(script.moviesmegatvbox)</property>
			<property name="list">RunAddOn(script.moviesmegatvbox)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-moviesmegatvbox</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>[B]TV on Demand[/B]</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/tv.png</thumb>
			<property name="labelID">script.tvshowsmegatvbox</property>
			<property name="defaultID">script.tvshowsmegatvbox</property>
			<property name="translatedPath">RunAddOn(script.tvshowsmegatvbox)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.tvshowsmegatvbox)</onclick>
			<property name="path">RunAddOn(script.tvshowsmegatvbox)</property>
			<property name="list">RunAddOn(script.tvshowsmegatvbox)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-tvshowsmegatvbox</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>[B]Live Sports &amp; Replays[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/sports.png</thumb>
			<property name="labelID">script.mtvbsports</property>
			<property name="defaultID">script.mtvbsports</property>
			<property name="translatedPath">RunAddOn(script.mtvbsports)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbsports)</onclick>
			<property name="path">RunAddOn(script.mtvbsports)</property>
			<property name="list">RunAddOn(script.mtvbsports)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbsports</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>[B]Music TV &amp; Radio[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/music.png</thumb>
			<property name="labelID">script.mtvbmusic</property>
			<property name="defaultID">script.mtvbmusic</property>
			<property name="translatedPath">RunAddOn(script.mtvbmusic)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbmusic)</onclick>
			<property name="path">RunAddOn(script.mtvbmusic)</property>
			<property name="list">RunAddOn(script.mtvbmusic)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbmusic</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>[B]Play Retro Games[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/games.png</thumb>
			<property name="labelID">script.mtvbgamelauncher</property>
			<property name="defaultID">script.mtvbgamelauncher</property>
			<property name="translatedPath">RunAddOn(script.mtvbgamelauncher)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbgamelauncher)</onclick>
			<property name="path">RunAddOn(script.mtvbgamelauncher)</property>
			<property name="list">RunAddOn(script.mtvbgamelauncher)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbgamelauncher</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>[B]App Installer[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/install.png</thumb>
			<property name="labelID">script.mtvbapkinstaller</property>
			<property name="defaultID">script.mtvbapkinstaller</property>
			<property name="translatedPath">RunAddOn(script.mtvbapkinstaller)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbapkinstaller)</onclick>
			<property name="path">RunAddOn(script.mtvbapkinstaller)</property>
			<property name="list">RunAddOn(script.mtvbapkinstaller)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbapkinstaller</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>[B]App Launcher[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/Icon-Twisty-Launcher-(1).png</thumb>
			<property name="labelID">b-applauncher-b</property>
			<property name="defaultID">script.mtvbapklauncher</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,androidapp://sources/apps/,return)</onclick>
			<property name="path">ActivateWindow(Programs,androidapp://sources/apps/,return)</property>
			<property name="list">androidapp://sources/apps/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">b-applauncher-b</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>[B]Fitness &amp; Self Learning[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/fitness.png</thumb>
			<property name="labelID">script.mtvbfitness</property>
			<property name="defaultID">script.mtvbfitness</property>
			<property name="translatedPath">RunAddOn(script.mtvbfitness)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbfitness)</onclick>
			<property name="path">RunAddOn(script.mtvbfitness)</property>
			<property name="list">RunAddOn(script.mtvbfitness)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbfitness</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>[B]My Favourites[/B]</label>
			<label2>Custom item</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/favourites.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/favourites.png</thumb>
			<property name="labelID">b-myfavourites-b</property>
			<property name="defaultID">superfavourites</property>
			<property name="translatedPath">ActivateWindow(10025,"plugin://plugin.program.super.favourites/?content_type=video",return)</property>
			<property name="thumb.name">favourites.png</property>
			<property name="thumbName">favourites.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(favourites)</onclick>
			<property name="path">ActivateWindow(favourites)</property>
			<property name="list">favourites</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">b-myfavourites-b</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>[B]Show Weather Info[/B]</label>
			<label2>Custom item</label2>
			<icon>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanArtExtension]</icon>
			<thumb>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$INFO[Skin.String(WeatherFanArtPack.ext)]</thumb>
			<property name="labelID">b-showweatherinfo-b</property>
			<property name="defaultID">weather</property>
			<property name="translatedPath">ActivateWindow(Weather)</property>
			<property name="widget">weather</property>
			<property name="widgetName">8</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background.name">None</property>
			<property name="backgroundName">None</property>
			<property name="thumb.name">Use dynamic weather background</property>
			<property name="thumbName">Use dynamic weather background</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">b-showweatherinfo-b</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>[B]Cerebro TV Tools[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/btt-logo-square-rounded.png</thumb>
			<property name="labelID">script.mtvbtools</property>
			<property name="defaultID">script.mtvbtools</property>
			<property name="translatedPath">RunAddOn(script.mtvbtools)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbtools)</onclick>
			<property name="path">RunAddOn(script.mtvbtools)</property>
			<property name="list">RunAddOn(script.mtvbtools)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbtools</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>[B]My Local Files[/B]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/addons.png</thumb>
			<property name="labelID">b-mylocalfiles-b</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(Videos,sources://video/,return)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,sources://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,sources://video/,return)</property>
			<property name="list">sources://video/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">b-mylocalfiles-b</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>[B]CCTV &amp; Web Cams[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/videoaddons.png</thumb>
			<property name="labelID">script.mtvbcctv</property>
			<property name="defaultID">script.mtvbcctv</property>
			<property name="translatedPath">RunAddOn(script.mtvbcctv)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbcctv)</onclick>
			<property name="path">RunAddOn(script.mtvbcctv)</property>
			<property name="list">RunAddOn(script.mtvbcctv)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbcctv</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>[B]YouTube[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/youtube.png</thumb>
			<property name="labelID">plugin.video.youtube</property>
			<property name="defaultID">plugin.video.youtube</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.youtube",return)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.youtube",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.youtube",return)</property>
			<property name="list">plugin://plugin.video.youtube</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-video-youtube</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="16">
			<property name="id">$NUMBER[16]</property>
			<label>[B]Show My Device Info[/B]</label>
			<label2>Custom item</label2>
			<icon>special://skin/extras/backgrounds/systeminfo.jpg</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/tvrecordings.png</thumb>
			<property name="labelID">b-showmydeviceinfo-b</property>
			<property name="defaultID">130</property>
			<property name="translatedPath">ActivateWindow(systeminfo)</property>
			<property name="thumb.name">tvrecordings.png</property>
			<property name="thumbName">tvrecordings.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(systeminfo)</onclick>
			<property name="path">ActivateWindow(systeminfo)</property>
			<property name="list">systeminfo</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">b-showmydeviceinfo-b</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="17">
			<property name="id">$NUMBER[17]</property>
			<label>[B]File manager[/B]</label>
			<label2>Custom item</label2>
			<icon>special://home/userdata/addon_data/skin.titan/hometiles/filemanager.png</icon>
			<thumb />
			<property name="labelID">b-filemanager-b</property>
			<property name="defaultID">7</property>
			<property name="translatedPath">ActivateWindow(filemanager)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(filemanager)</onclick>
			<property name="path">ActivateWindow(filemanager)</property>
			<property name="list">filemanager</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">b-filemanager-b</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="18">
			<property name="id">$NUMBER[18]</property>
			<label>[B]Adult Section[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/adult.png</thumb>
			<property name="labelID">script.mtvbxxx</property>
			<property name="defaultID">script.mtvbxxx</property>
			<property name="translatedPath">RunAddOn(script.mtvbxxx)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbxxx)</onclick>
			<property name="path">RunAddOn(script.mtvbxxx)</property>
			<property name="list">RunAddOn(script.mtvbxxx)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbxxx</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="19">
			<property name="id">$NUMBER[19]</property>
			<label>[B]Settings[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/settings.png</thumb>
			<property name="labelID">script.mtvbsettings</property>
			<property name="defaultID">script.mtvbsettings</property>
			<property name="translatedPath">RunAddOn(script.mtvbsettings)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbsettings)</onclick>
			<property name="path">RunAddOn(script.mtvbsettings)</property>
			<property name="list">RunAddOn(script.mtvbsettings)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbsettings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="20">
			<property name="id">$NUMBER[20]</property>
			<label>[B]Exit / Reboot[/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>special://home/userdata/addon_data/skin.titan/hometiles/exit.png</thumb>
			<property name="labelID">script.mtvbexit</property>
			<property name="defaultID">script.mtvbexit</property>
			<property name="translatedPath">RunAddOn(script.mtvbexit)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">RunAddOn(script.mtvbexit)</onclick>
			<property name="path">RunAddOn(script.mtvbexit)</property>
			<property name="list">RunAddOn(script.mtvbexit)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-mtvbexit</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-script-tvguidemegatvbox">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-tvguidemegatvbox">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-moviesmegatvbox">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-moviesmegatvbox">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-tvshowsmegatvbox">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-tvshowsmegatvbox">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbsports">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbsports">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbmusic">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbmusic">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbgamelauncher">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbgamelauncher">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbapkinstaller">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbapkinstaller">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-b-applauncher-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-b-applauncher-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbfitness">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbfitness">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-b-myfavourites-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-b-myfavourites-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-b-showweatherinfo-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-b-showweatherinfo-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbtools">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbtools">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-b-mylocalfiles-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-b-mylocalfiles-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbcctv">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbcctv">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-b-showmydeviceinfo-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-b-showmydeviceinfo-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-b-filemanager-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-b-filemanager-b">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbxxx">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbxxx">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbsettings">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbsettings">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-script-mtvbexit">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-mtvbexit">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">21</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
	</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="11" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11510" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="8" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="weather" />
			<param name="widgetid" value="11510" />
			<param name="widgetName" value="8" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[WeatherWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-b-showweatherinfo-b,0) | !Skin.String(widgetvalue-b-showweatherinfo-b)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11520" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11530" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11540" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11550" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11560" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11570" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11580" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="b-showweatherinfo-b" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-b-showweatherinfo-b,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
	</include>
	<variable name="11510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11510">
		<value condition="StringCompare(Container(11510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11510).ListItem.label] $INFO[Container(11510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Title) + SubString(Container(11510).ListItem.FolderPath, pvr://)">$INFO[Container(11510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Season) + !IsEmpty(Container(11510).ListItem.Episode) + !StringCompare(Container(11510).ListItem.TvShowTitle,Container(11510).ListItem.Title)">[UPPERCASE]S$INFO[Container(11510).ListItem.Season]E$INFO[Container(11510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Title)">$INFO[Container(11510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Label)">$INFO[Container(11510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11510">
		<value condition="!IsEmpty(Container(11510).ListItem.TvShowTitle) + !IsEmpty(Container(11510).ListItem.Genre)">$INFO[Container(11510).ListItem.TvShowTitle,, • ]$INFO[Container(11510).ListItem.Year,, • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.TvShowTitle)">$INFO[Container(11510).ListItem.TvShowTitle,, • ]$INFO[Container(11510).ListItem.Premiered,, • ]$INFO[Container(11510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Year)">$INFO[Container(11510).ListItem.Year,, • ]$INFO[Container(11510).ListItem.Duration,,min. • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Artist) + !IsEmpty(Container(11510).ListItem.Album)">$INFO[Container(11510).ListItem.Artist,, • ]$INFO[Container(11510).ListItem.Album,, • ]$INFO[Container(11510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.Property(StartTime))">$INFO[Container(11510).ListItem.Property(ChannelName),, • ]$INFO[Container(11510).ListItem.Property(StartTime),, - ]$INFO[Container(11510).ListItem.Property(EndTime),, • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11510).ListItem.StartTime)">$INFO[Container(11510).ListItem.ChannelName,, • ]$INFO[Container(11510).ListItem.StartTime,, - ]$INFO[Container(11510).ListItem.EndTime,, • ]$INFO[Container(11510).ListItem.Genre]</value>
	</variable>
	<variable name="11520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11520">
		<value condition="StringCompare(Container(11520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11520).ListItem.label] $INFO[Container(11520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Title) + SubString(Container(11520).ListItem.FolderPath, pvr://)">$INFO[Container(11520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Season) + !IsEmpty(Container(11520).ListItem.Episode) + !StringCompare(Container(11520).ListItem.TvShowTitle,Container(11520).ListItem.Title)">[UPPERCASE]S$INFO[Container(11520).ListItem.Season]E$INFO[Container(11520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Title)">$INFO[Container(11520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Label)">$INFO[Container(11520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11520">
		<value condition="!IsEmpty(Container(11520).ListItem.TvShowTitle) + !IsEmpty(Container(11520).ListItem.Genre)">$INFO[Container(11520).ListItem.TvShowTitle,, • ]$INFO[Container(11520).ListItem.Year,, • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.TvShowTitle)">$INFO[Container(11520).ListItem.TvShowTitle,, • ]$INFO[Container(11520).ListItem.Premiered,, • ]$INFO[Container(11520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Year)">$INFO[Container(11520).ListItem.Year,, • ]$INFO[Container(11520).ListItem.Duration,,min. • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Artist) + !IsEmpty(Container(11520).ListItem.Album)">$INFO[Container(11520).ListItem.Artist,, • ]$INFO[Container(11520).ListItem.Album,, • ]$INFO[Container(11520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.Property(StartTime))">$INFO[Container(11520).ListItem.Property(ChannelName),, • ]$INFO[Container(11520).ListItem.Property(StartTime),, - ]$INFO[Container(11520).ListItem.Property(EndTime),, • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11520).ListItem.StartTime)">$INFO[Container(11520).ListItem.ChannelName,, • ]$INFO[Container(11520).ListItem.StartTime,, - ]$INFO[Container(11520).ListItem.EndTime,, • ]$INFO[Container(11520).ListItem.Genre]</value>
	</variable>
	<variable name="11530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11530">
		<value condition="StringCompare(Container(11530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11530).ListItem.label] $INFO[Container(11530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Title) + SubString(Container(11530).ListItem.FolderPath, pvr://)">$INFO[Container(11530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Season) + !IsEmpty(Container(11530).ListItem.Episode) + !StringCompare(Container(11530).ListItem.TvShowTitle,Container(11530).ListItem.Title)">[UPPERCASE]S$INFO[Container(11530).ListItem.Season]E$INFO[Container(11530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Title)">$INFO[Container(11530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Label)">$INFO[Container(11530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11530">
		<value condition="!IsEmpty(Container(11530).ListItem.TvShowTitle) + !IsEmpty(Container(11530).ListItem.Genre)">$INFO[Container(11530).ListItem.TvShowTitle,, • ]$INFO[Container(11530).ListItem.Year,, • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.TvShowTitle)">$INFO[Container(11530).ListItem.TvShowTitle,, • ]$INFO[Container(11530).ListItem.Premiered,, • ]$INFO[Container(11530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Year)">$INFO[Container(11530).ListItem.Year,, • ]$INFO[Container(11530).ListItem.Duration,,min. • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Artist) + !IsEmpty(Container(11530).ListItem.Album)">$INFO[Container(11530).ListItem.Artist,, • ]$INFO[Container(11530).ListItem.Album,, • ]$INFO[Container(11530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.Property(StartTime))">$INFO[Container(11530).ListItem.Property(ChannelName),, • ]$INFO[Container(11530).ListItem.Property(StartTime),, - ]$INFO[Container(11530).ListItem.Property(EndTime),, • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11530).ListItem.StartTime)">$INFO[Container(11530).ListItem.ChannelName,, • ]$INFO[Container(11530).ListItem.StartTime,, - ]$INFO[Container(11530).ListItem.EndTime,, • ]$INFO[Container(11530).ListItem.Genre]</value>
	</variable>
	<variable name="11540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11540">
		<value condition="StringCompare(Container(11540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11540).ListItem.label] $INFO[Container(11540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Title) + SubString(Container(11540).ListItem.FolderPath, pvr://)">$INFO[Container(11540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Season) + !IsEmpty(Container(11540).ListItem.Episode) + !StringCompare(Container(11540).ListItem.TvShowTitle,Container(11540).ListItem.Title)">[UPPERCASE]S$INFO[Container(11540).ListItem.Season]E$INFO[Container(11540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Title)">$INFO[Container(11540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Label)">$INFO[Container(11540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11540">
		<value condition="!IsEmpty(Container(11540).ListItem.TvShowTitle) + !IsEmpty(Container(11540).ListItem.Genre)">$INFO[Container(11540).ListItem.TvShowTitle,, • ]$INFO[Container(11540).ListItem.Year,, • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.TvShowTitle)">$INFO[Container(11540).ListItem.TvShowTitle,, • ]$INFO[Container(11540).ListItem.Premiered,, • ]$INFO[Container(11540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Year)">$INFO[Container(11540).ListItem.Year,, • ]$INFO[Container(11540).ListItem.Duration,,min. • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Artist) + !IsEmpty(Container(11540).ListItem.Album)">$INFO[Container(11540).ListItem.Artist,, • ]$INFO[Container(11540).ListItem.Album,, • ]$INFO[Container(11540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.Property(StartTime))">$INFO[Container(11540).ListItem.Property(ChannelName),, • ]$INFO[Container(11540).ListItem.Property(StartTime),, - ]$INFO[Container(11540).ListItem.Property(EndTime),, • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11540).ListItem.StartTime)">$INFO[Container(11540).ListItem.ChannelName,, • ]$INFO[Container(11540).ListItem.StartTime,, - ]$INFO[Container(11540).ListItem.EndTime,, • ]$INFO[Container(11540).ListItem.Genre]</value>
	</variable>
	<variable name="11550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11550">
		<value condition="StringCompare(Container(11550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11550).ListItem.label] $INFO[Container(11550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Title) + SubString(Container(11550).ListItem.FolderPath, pvr://)">$INFO[Container(11550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Season) + !IsEmpty(Container(11550).ListItem.Episode) + !StringCompare(Container(11550).ListItem.TvShowTitle,Container(11550).ListItem.Title)">[UPPERCASE]S$INFO[Container(11550).ListItem.Season]E$INFO[Container(11550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Title)">$INFO[Container(11550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Label)">$INFO[Container(11550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11550">
		<value condition="!IsEmpty(Container(11550).ListItem.TvShowTitle) + !IsEmpty(Container(11550).ListItem.Genre)">$INFO[Container(11550).ListItem.TvShowTitle,, • ]$INFO[Container(11550).ListItem.Year,, • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.TvShowTitle)">$INFO[Container(11550).ListItem.TvShowTitle,, • ]$INFO[Container(11550).ListItem.Premiered,, • ]$INFO[Container(11550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Year)">$INFO[Container(11550).ListItem.Year,, • ]$INFO[Container(11550).ListItem.Duration,,min. • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Artist) + !IsEmpty(Container(11550).ListItem.Album)">$INFO[Container(11550).ListItem.Artist,, • ]$INFO[Container(11550).ListItem.Album,, • ]$INFO[Container(11550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.Property(StartTime))">$INFO[Container(11550).ListItem.Property(ChannelName),, • ]$INFO[Container(11550).ListItem.Property(StartTime),, - ]$INFO[Container(11550).ListItem.Property(EndTime),, • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11550).ListItem.StartTime)">$INFO[Container(11550).ListItem.ChannelName,, • ]$INFO[Container(11550).ListItem.StartTime,, - ]$INFO[Container(11550).ListItem.EndTime,, • ]$INFO[Container(11550).ListItem.Genre]</value>
	</variable>
	<variable name="11560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11560">
		<value condition="StringCompare(Container(11560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11560).ListItem.label] $INFO[Container(11560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Title) + SubString(Container(11560).ListItem.FolderPath, pvr://)">$INFO[Container(11560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Season) + !IsEmpty(Container(11560).ListItem.Episode) + !StringCompare(Container(11560).ListItem.TvShowTitle,Container(11560).ListItem.Title)">[UPPERCASE]S$INFO[Container(11560).ListItem.Season]E$INFO[Container(11560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Title)">$INFO[Container(11560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Label)">$INFO[Container(11560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11560">
		<value condition="!IsEmpty(Container(11560).ListItem.TvShowTitle) + !IsEmpty(Container(11560).ListItem.Genre)">$INFO[Container(11560).ListItem.TvShowTitle,, • ]$INFO[Container(11560).ListItem.Year,, • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.TvShowTitle)">$INFO[Container(11560).ListItem.TvShowTitle,, • ]$INFO[Container(11560).ListItem.Premiered,, • ]$INFO[Container(11560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Year)">$INFO[Container(11560).ListItem.Year,, • ]$INFO[Container(11560).ListItem.Duration,,min. • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Artist) + !IsEmpty(Container(11560).ListItem.Album)">$INFO[Container(11560).ListItem.Artist,, • ]$INFO[Container(11560).ListItem.Album,, • ]$INFO[Container(11560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.Property(StartTime))">$INFO[Container(11560).ListItem.Property(ChannelName),, • ]$INFO[Container(11560).ListItem.Property(StartTime),, - ]$INFO[Container(11560).ListItem.Property(EndTime),, • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11560).ListItem.StartTime)">$INFO[Container(11560).ListItem.ChannelName,, • ]$INFO[Container(11560).ListItem.StartTime,, - ]$INFO[Container(11560).ListItem.EndTime,, • ]$INFO[Container(11560).ListItem.Genre]</value>
	</variable>
	<variable name="11570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11570">
		<value condition="StringCompare(Container(11570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11570).ListItem.label] $INFO[Container(11570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Title) + SubString(Container(11570).ListItem.FolderPath, pvr://)">$INFO[Container(11570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Season) + !IsEmpty(Container(11570).ListItem.Episode) + !StringCompare(Container(11570).ListItem.TvShowTitle,Container(11570).ListItem.Title)">[UPPERCASE]S$INFO[Container(11570).ListItem.Season]E$INFO[Container(11570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Title)">$INFO[Container(11570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Label)">$INFO[Container(11570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11570">
		<value condition="!IsEmpty(Container(11570).ListItem.TvShowTitle) + !IsEmpty(Container(11570).ListItem.Genre)">$INFO[Container(11570).ListItem.TvShowTitle,, • ]$INFO[Container(11570).ListItem.Year,, • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.TvShowTitle)">$INFO[Container(11570).ListItem.TvShowTitle,, • ]$INFO[Container(11570).ListItem.Premiered,, • ]$INFO[Container(11570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Year)">$INFO[Container(11570).ListItem.Year,, • ]$INFO[Container(11570).ListItem.Duration,,min. • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Artist) + !IsEmpty(Container(11570).ListItem.Album)">$INFO[Container(11570).ListItem.Artist,, • ]$INFO[Container(11570).ListItem.Album,, • ]$INFO[Container(11570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.Property(StartTime))">$INFO[Container(11570).ListItem.Property(ChannelName),, • ]$INFO[Container(11570).ListItem.Property(StartTime),, - ]$INFO[Container(11570).ListItem.Property(EndTime),, • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11570).ListItem.StartTime)">$INFO[Container(11570).ListItem.ChannelName,, • ]$INFO[Container(11570).ListItem.StartTime,, - ]$INFO[Container(11570).ListItem.EndTime,, • ]$INFO[Container(11570).ListItem.Genre]</value>
	</variable>
	<variable name="11580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11580">
		<value condition="StringCompare(Container(11580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11580).ListItem.label] $INFO[Container(11580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Title) + SubString(Container(11580).ListItem.FolderPath, pvr://)">$INFO[Container(11580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Season) + !IsEmpty(Container(11580).ListItem.Episode) + !StringCompare(Container(11580).ListItem.TvShowTitle,Container(11580).ListItem.Title)">[UPPERCASE]S$INFO[Container(11580).ListItem.Season]E$INFO[Container(11580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Title)">$INFO[Container(11580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Label)">$INFO[Container(11580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11580">
		<value condition="!IsEmpty(Container(11580).ListItem.TvShowTitle) + !IsEmpty(Container(11580).ListItem.Genre)">$INFO[Container(11580).ListItem.TvShowTitle,, • ]$INFO[Container(11580).ListItem.Year,, • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.TvShowTitle)">$INFO[Container(11580).ListItem.TvShowTitle,, • ]$INFO[Container(11580).ListItem.Premiered,, • ]$INFO[Container(11580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Year)">$INFO[Container(11580).ListItem.Year,, • ]$INFO[Container(11580).ListItem.Duration,,min. • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Artist) + !IsEmpty(Container(11580).ListItem.Album)">$INFO[Container(11580).ListItem.Artist,, • ]$INFO[Container(11580).ListItem.Album,, • ]$INFO[Container(11580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.Property(StartTime))">$INFO[Container(11580).ListItem.Property(ChannelName),, • ]$INFO[Container(11580).ListItem.Property(StartTime),, - ]$INFO[Container(11580).ListItem.Property(EndTime),, • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(11580).ListItem.StartTime)">$INFO[Container(11580).ListItem.ChannelName,, • ]$INFO[Container(11580).ListItem.StartTime,, - ]$INFO[Container(11580).ListItem.EndTime,, • ]$INFO[Container(11580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-11">
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,7)" />
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,6)" />
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,5)" />
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,4)" />
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,3)" />
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,2)" />
		<value condition="Skin.String(widgetvalue-b-showweatherinfo-b,1)" />
		<value>8</value>
	</variable>
	<include name="skinshortcuts-template-spotlightwidget">
		<description>This include was built automatically as the template didn't match any menu items</description>
	</include>
</includes>
